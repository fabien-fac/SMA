import classes.Position
import interfaces.IActionsAgent
import interfaces.ICreateAgent
import interfaces.ICreateProxyAgent
import interfaces.IInfos
import interfaces.ILog
import interfaces.IPercevoir

namespace SMA {

	ecosystem Agents {

		provides createElement: ICreateAgent

		species Agent(nom: String, position: Position, couleur: String) {
			provides infosAgent: IInfos
			provides actionsAgent: IActionsAgent
			requires percevoirAgent: IPercevoir
		}
	}
	
	ecosystem ProxysAgent {
		
		provides createProxyAgent: ICreateProxyAgent
		requires percevoirProxy: IPercevoir
		
		species ProxyAgent(nomAgent: String){
			provides percevoirProxySpecy: IPercevoir
		}
	}
	
	ecosystem AgentsAvecProxyEcosystem {
		
		provides infos: IInfos
		provides actionsAgentsProxy: IActionsAgent
		requires percevoirAP: IPercevoir
		
		part proxys: ProxysAgent{
			bind percevoirProxy to percevoirAP
		}
		
		part agents: Agents
		
		species AgentAvecProxy(nom: String, position: Position, couleur: String){
			use proxy: proxys.ProxyAgent(nom)
			use agent: agents.Agent(nom, position, couleur){
				bind percevoirAgent to proxy.percevoirProxySpecy
			}
		}
	}

	component Logger {
		provides log: ILog
	}

}